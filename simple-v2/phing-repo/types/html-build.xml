<?xml version="1.0"?>
<project default="default" name="html">

    <!-- ============================================  -->
    <!-- Target: default                           -->
    <!-- ============================================  -->
<target name="default" description="The default target used when no arguments have been given." hidden="true">
    <exec command="phing -f ${phing.file} -l" outputProperty="phing_targets" />
    <echo>Please select a target.</echo>
    <echo>${phing_targets}</echo>  
</target>
    <!-- ============================================  -->
    <!-- Target: zero                             -->
    <!-- ============================================  -->
<target name="zero" hidden="true" >
    <property file="C:\phing-repo\shared\zero.properties" />
    <property file="build.properties" />
<echo>${projectname}</echo>
        <loadfile property="currentversion" file="version.txt" />


</target>
    <!-- ============================================  -->
    <!-- Target: levelup - increment the version #                            -->
    <!-- ============================================  -->
<target name="levelup"  depends="zero" description="Increment the project Version" >

<input propertyname="versiontype" validargs="major,minor,patch">
  major, minor or patch release ?
</input>
     <if>
         <equals arg1="${versiontype}" arg2="major" />
         <then>
            <version releasetype="Major" file="version.txt" property="version.number"/>
         </then> 
         <elseif>
              <equals arg1="${versiontype}" arg2="minor" />
              <then>
                <version releasetype="Minor" file="version.txt" property="version.number"/>
              </then>
         </elseif>
          <elseif>
              <equals arg1="${versiontype}" arg2="patch" />
              <then>
                <version releasetype="Bugfix" file="version.txt" property="version.number"/>
              </then>
         </elseif>
         <else>
           <echo message="major,minor,patch - only . Version unchanged." />
         </else>
    </if>
       <echo message="Version ${version.number}" />
      <phingcall target="fixVersionLineBreak" />
</target>
    <!-- ============================================  -->
    <!-- Target: zipsrc - Create ZIP from src/                               -->
    <!-- ============================================  -->
<target name="zipsrc" depends="zero" description="Create Zip file of src directory">
    <zip destfile="${projectname}-src-${currentversion}.zip">
     <fileset dir="./src">
         <include name="**/**" />
     </fileset>
    </zip>
</target>
    <!-- ============================================  -->
    <!-- Target: tarsrc - Create tar file from src/                               -->
    <!-- ============================================  -->
<target name="tarsrc" depends="zero" description="Create Zip file of src directory">
    <tar  destfile="./${projectname}-src-${currentversion}.tar.gz"  compression="gzip">
     <fileset dir="./src">
         <include name="**/**" />
     </fileset>
    </tar >
</target>
    <!-- ============================================  -->
    <!-- Target: zipdist - Create ZIP from dist/                               -->
    <!-- ============================================  -->
<target name="zipdist" depends="zero" description="Create Zip file of src directory">
    <zip destfile="${projectname}-release-${currentversion}.zip">
     <fileset dir="./${builddir}">
         <include name="**/**" />
     </fileset>
    </zip>
</target>
    <!-- ============================================  -->
    <!-- Target: tardist- Create tar.gz from dist/                               -->
    <!-- ============================================  -->
<target name="tardist" depends="zero" description="Create tar.gz file of src directory">
    <tar destfile="./${projectname}-release-${currentversion}.tar.gz" compression="gzip">
     <fileset dir="./${builddir}">
         <include name="**/**" />
     </fileset>
    </tar>
</target>
    <!-- ============================================  -->
    <!-- Target: zip - Create ZIP from project root                             -->
    <!-- ============================================  -->
<target name="zip" depends="zero" description="Create Zip file of src directory">
    <zip destfile="${projectname}-project-${currentversion}.zip">
     <fileset dir="./">
         <include name="**/**" />
     </fileset>
    </zip>
</target>
    <!-- ============================================  -->
    <!-- Target: tar - Create Tar from project root                             -->
    <!-- ============================================  -->
<target name="tar" depends="zero" description="Create Tar file of src directory">
    <tar destfile="./${projectname}-project-${currentversion}.tar.gz"  compression="gzip">
     <fileset dir="./">
         <include name="**/**" />
     </fileset>
    </tar>
</target>
    <!-- ============================================  -->
    <!-- Target: local- Deploy to the local webserver                               -->
    <!-- ============================================  -->
<target name="local" depends="build" description="Deploy to the local webserver    ">
         <copy todir="${config.web.dir}\${projectname}">
 			<fileset dir="dist">
				<include name="**/**" />
			</fileset>       
        </copy>      
</target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
<target name="build"  depends="zero" description="Build the project" >
<echo>Running Build for  ${projectname}</echo>
    <delete dir="${builddir}" />
    <mkdir dir="${builddir}" />
    <copy todir="./${builddir}" >
        <fileset dir="./src">
            <include name="****" />
        </fileset>
    </copy>
    
</target>

    <!-- ============================================  -->
    <!-- Target: release - build from src to dist and create a zip archive, run levelup first                               -->
    <!-- ============================================  -->
<target name="release"  depends="zero" description="Release the project" >
<echo>Building Release for  ${projectname}</echo>
    <delete dir="${builddir}" />
    <mkdir dir="${builddir}" />
    <copy todir="./${builddir}" >
        <fileset dir="./src">
            <include name="****" />
        </fileset>
    </copy>
    <phingcall target="levelup" />
    <phingcall target="tardist" />
    <phingcall target="zipdist" />
    <move todir="${builddir}">
        <fileset dir="./">
            <include name="*.zip" />
            <include name="*.gz" />
        </fileset>
    </move>
    
</target>


<target name="fixVersionLineBreak" hidden="true" >
    <reflexive>
        <fileset dir=".">
            <include pattern="*version.txt"/>
      </fileset>
        <filterchain>
            <striplinebreaks />
        </filterchain>
    </reflexive>
</target>



</project>
